/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.108
 * Generated at: 2025-08-09 17:45:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import java.text.SimpleDateFormat;

public final class dashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(7);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');

// --- Security Check & Session Info ---
if (session.getAttribute("userId") == null) {
    response.sendRedirect("index.html");
    return;
}
Integer userId = (Integer) session.getAttribute("userId");
String fullName = (String) session.getAttribute("fullName");
String userBloodGroup = "";
int totalDonations = 0;
int totalRequestsFulfilled = 0; // New variable for fulfilled requests

// --- Database Connection & Data Fetching ---
String dbUrl = "jdbc:mysql://localhost:3306/blood_bank_db?useSSL=false";
String dbUser = "root";
String dbPass = "";
Connection conn = null;

try {
    conn = DriverManager.getConnection(dbUrl, dbUser, dbPass);

    // Fetch user's blood group
    try (PreparedStatement pstmt = conn.prepareStatement("SELECT bloodGroup FROM users WHERE id = ?")) {
        pstmt.setInt(1, userId);
        ResultSet rs = pstmt.executeQuery();
        if (rs.next()) userBloodGroup = rs.getString("bloodGroup");
    }

    // Fetch user's total fulfilled donations (donations they made)
    try (PreparedStatement pstmt = conn.prepareStatement("SELECT COUNT(*) FROM appointments WHERE donor_id = ? AND status = 'Fulfilled'")) {
        pstmt.setInt(1, userId);
        ResultSet rs = pstmt.executeQuery();
        if (rs.next()) totalDonations = rs.getInt(1);
    }

    // *** NEW: Fetch total units received for the user's requests ***
    String requestsSql = "SELECT COUNT(*) FROM appointments a JOIN blood_requests br ON a.request_id = br.id WHERE br.requester_id = ? AND a.status = 'Fulfilled'";
    try (PreparedStatement pstmt = conn.prepareStatement(requestsSql)) {
        pstmt.setInt(1, userId);
        ResultSet rs = pstmt.executeQuery();
        if (rs.next()) {
            totalRequestsFulfilled = rs.getInt(1);
        }
    }

} catch (SQLException e) {
    e.printStackTrace();
}

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <title>Dashboard - LifeFlow</title>\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\" rel=\"stylesheet\">\n");
      out.write("    <link rel=\"icon\" href=\"favicon.ico\" type=\"image/x-icon\">\n");
      out.write("    <link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\">\n");
      out.write("</head>\n");
      out.write("<body class=\"bg-gray-1000 font-sans\">\n");
      out.write("    <!-- Header -->\n");
      out.write("    <header class=\"bg-white shadow-md\">\n");
      out.write("        <nav class=\"container mx-auto px-6 py-4 flex justify-between items-center\">\n");
      out.write("        <div>\n");
      out.write("            <img src=\"images/LifeFlowIcon.jpg\" alt=\"LifeFlow Logo\" class=\"h-10 w-10 rounded-full mr-4 float-left\">\n");
      out.write("            <a href=\"dashboard.jsp\" class=\"text-2xl font-bold text-red-600\">LifeFlow</a>\n");
      out.write("        </div>\n");
      out.write("            <div class=\"flex items-center\">\n");
      out.write("                <span class=\"text-gray-700 mr-4\">Welcome, ");
      out.print( fullName );
      out.write("!</span>\n");
      out.write("                <!-- *** ADDED: View All Requests Link *** -->\n");
      out.write("                <a href=\"all_requests.jsp\" class=\"text-sm text-blue-600 hover:underline mr-4\">View All Requests</a>\n");
      out.write("                <a href=\"edit_profile.jsp\" class=\"text-sm text-blue-600 hover:underline mr-4\">Edit Profile</a>\n");
      out.write("                <a href=\"logout\" class=\"px-4 py-2 text-white bg-red-600 rounded-full hover:bg-red-700 text-sm\">Logout</a>\n");
      out.write("            </div>\n");
      out.write("        </nav>\n");
      out.write("    </header>\n");
      out.write("\n");
      out.write("    <!-- Main Content -->\n");
      out.write("    <main class=\"flex-grow container mx-auto p-6\">\n");
      out.write("        <h1 class=\"text-3xl font-bold text-gray-800 mb-4\">User Dashboard</h1>\n");
      out.write("\n");
      out.write("        <!-- Summary Section -->\n");
      out.write("        <div class=\"grid md:grid-cols-3 gap-6 mb-6\">\n");
      out.write("            <div class=\"bg-white p-6 rounded-lg shadow text-center\">\n");
      out.write("                <h2 class=\"text-xl text-gray-700 mb-2\">Your Blood Group</h2>\n");
      out.write("                <p class=\"text-4xl font-bold text-red-600\">");
      out.print( userBloodGroup );
      out.write("</p>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"bg-white p-6 rounded-lg shadow text-center\">\n");
      out.write("                <h2 class=\"text-xl text-gray-700 mb-2\">Your Donations Fulfilled</h2>\n");
      out.write("                <p class=\"text-4xl font-bold text-red-600\">");
      out.print( totalDonations );
      out.write("</p>\n");
      out.write("            </div>\n");
      out.write("            <!-- *** NEW CARD: Your Requests Fulfilled *** -->\n");
      out.write("            <div class=\"bg-white p-6 rounded-lg shadow text-center\">\n");
      out.write("                <h2 class=\"text-xl text-gray-700 mb-2\">Your Requests Fulfilled</h2>\n");
      out.write("                <p class=\"text-4xl font-bold text-blue-600\">");
      out.print( totalRequestsFulfilled );
      out.write(" <span class=\"text-2xl\">units</span></p>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Actions Section -->\n");
      out.write("        <div class=\"grid md:grid-cols-2 gap-6 mb-8\">\n");
      out.write("            <!-- Request Blood Card -->\n");
      out.write("            <div class=\"bg-white p-8 rounded-lg shadow\">\n");
      out.write("                <h2 class=\"text-2xl font-bold text-gray-800 mb-4\">I Need Blood</h2>\n");
      out.write("                <p class=\"text-gray-600 mb-6\">Create a public request for blood that will be visible to potential donors.</p>\n");
      out.write("                <button id=\"request-blood-btn\" class=\"bg-blue-600 text-white font-bold py-3 px-6 rounded-lg hover:bg-blue-700\">Request Blood</button>\n");
      out.write("            </div>\n");
      out.write("            <!-- Give Blood Card -->\n");
      out.write("            <div class=\"bg-white p-8 rounded-lg shadow\">\n");
      out.write("                <h2 class=\"text-2xl font-bold text-gray-800 mb-4\">I Want to Give Blood</h2>\n");
      out.write("                <p class=\"text-gray-600 mb-6\">View all available requests that match your blood type and save a life today.</p>\n");
      out.write("                <button id=\"give-blood-btn\" class=\"bg-green-600 text-white font-bold py-3 px-6 rounded-lg hover:bg-green-700\">Give Blood</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- My Blood Requests Section -->\n");
      out.write("        <div class=\"bg-white p-8 rounded-lg shadow mb-8\">\n");
      out.write("            <h2 class=\"text-2xl font-bold text-gray-800 mb-4\">My Blood Requests</h2>\n");
      out.write("            <div class=\"overflow-x-auto\">\n");
      out.write("                <table class=\"min-w-full bg-white\">\n");
      out.write("                    <thead class=\"bg-gray-200\">\n");
      out.write("                        <tr>\n");
      out.write("                            <th class=\"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase\">Patient</th>\n");
      out.write("                            <th class=\"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase\">Hospital</th>\n");
      out.write("                            <th class=\"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase\">Blood Group</th>\n");
      out.write("                            <th class=\"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase\">Status</th>\n");
      out.write("                            <th class=\"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase\">Waiting Time</th>\n");
      out.write("                        </tr>\n");
      out.write("                    </thead>\n");
      out.write("                    <tbody class=\"text-gray-700\">\n");
      out.write("                        ");

                            String myRequestsSql = "SELECT *, TIMESTAMPDIFF(HOUR, request_date, NOW()) as waiting_hours FROM blood_requests WHERE requester_id = ? ORDER BY request_date DESC";
                            try (PreparedStatement pstmt = conn.prepareStatement(myRequestsSql)) {
                                pstmt.setInt(1, userId);
                                ResultSet rs = pstmt.executeQuery();
                                if (!rs.isBeforeFirst() ) {
                                    out.println("<tr><td colspan='5' class='py-4 px-4 text-center text-gray-500'>You have not made any requests yet.</td></tr>");
                                } else {
                                    while (rs.next()) {
                                        long hours = rs.getLong("waiting_hours");
                                        long days = hours / 24;
                                        hours = hours % 24;
                                        String waitingTime = days + "d " + hours + "h";
                        
      out.write("\n");
      out.write("                        <tr class=\"border-b border-gray-200\">\n");
      out.write("                            <td class=\"py-3 px-4\">");
      out.print( rs.getString("patient_name") );
      out.write("</td>\n");
      out.write("                            <td class=\"py-3 px-4\">");
      out.print( rs.getString("hospital_name") );
      out.write(',');
      out.write(' ');
      out.print( rs.getString("hospital_location") );
      out.write("</td>\n");
      out.write("                            <td class=\"py-3 px-4\">");
      out.print( rs.getString("required_blood_group") );
      out.write("</td>\n");
      out.write("                            <td class=\"py-3 px-4\">\n");
      out.write("                                <span class=\"px-2 py-1 text-xs font-semibold rounded-full ");
      out.print( "Open".equals(rs.getString("status")) ? "bg-yellow-200 text-yellow-800" : "bg-green-200 text-green-800" );
      out.write("\">\n");
      out.write("                                    ");
      out.print( rs.getString("status") );
      out.write(' ');
      out.write('(');
      out.print( rs.getInt("units_required") );
      out.write(" units left)\n");
      out.write("                                </span>\n");
      out.write("                            </td>\n");
      out.write("                            <td class=\"py-3 px-4\">");
      out.print( waitingTime );
      out.write("</td>\n");
      out.write("                        </tr>\n");
      out.write("                        ");

                                    }
                                }
                            } catch (SQLException e) {
                                e.printStackTrace();
                            }
                        
      out.write("\n");
      out.write("                    </tbody>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- Scheduled Appointments for My Requests Section -->\n");
      out.write("        <div class=\"bg-white p-8 rounded-lg shadow\">\n");
      out.write("            <h2 class=\"text-2xl font-bold text-gray-800 mb-4\">Scheduled Donations for Your Requests</h2>\n");
      out.write("            <div class=\"overflow-x-auto\">\n");
      out.write("                <table class=\"min-w-full bg-white\">\n");
      out.write("                    <thead class=\"bg-gray-200\">\n");
      out.write("                        <tr>\n");
      out.write("                            <th class=\"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase\">Donor Name</th>\n");
      out.write("                            <th class=\"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase\">For Patient</th>\n");
      out.write("                            <th class=\"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase\">Appointment Date</th>\n");
      out.write("                            <th class=\"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase\">Status</th>\n");
      out.write("                            <th class=\"py-3 px-4 text-left text-sm font-semibold text-gray-600 uppercase\">Action</th>\n");
      out.write("                        </tr>\n");
      out.write("                    </thead>\n");
      out.write("                     <tbody class=\"text-gray-700\">\n");
      out.write("                        ");

                            String appointmentsSql = "SELECT a.id, a.request_id, u.fullName AS donor_name, br.patient_name, a.appointment_date, a.status FROM appointments a JOIN users u ON a.donor_id = u.id JOIN blood_requests br ON a.request_id = br.id WHERE br.requester_id = ? ORDER BY a.appointment_date DESC";
                            try (PreparedStatement pstmt = conn.prepareStatement(appointmentsSql)) {
                                pstmt.setInt(1, userId);
                                ResultSet rs = pstmt.executeQuery();
                                if (!rs.isBeforeFirst()) {
                                    out.println("<tr><td colspan='5' class='py-4 px-4 text-center text-gray-500'>No donors have scheduled an appointment for your requests yet.</td></tr>");
                                } else {
                                    while (rs.next()) {
                        
      out.write("\n");
      out.write("                        <tr class=\"border-b border-gray-200\">\n");
      out.write("                            <td class=\"py-3 px-4\">");
      out.print( rs.getString("donor_name") );
      out.write("</td>\n");
      out.write("                            <td class=\"py-3 px-4\">");
      out.print( rs.getString("patient_name") );
      out.write("</td>\n");
      out.write("                            <td class=\"py-3 px-4\">");
      out.print( new SimpleDateFormat("dd MMM, yyyy").format(rs.getDate("appointment_date")) );
      out.write("</td>\n");
      out.write("                            <td class=\"py-3 px-4\">\n");
      out.write("                                <span class=\"px-2 py-1 text-xs font-semibold rounded-full ");
      out.print( "Scheduled".equals(rs.getString("status")) ? "bg-yellow-200 text-yellow-800" : "bg-green-200 text-green-800" );
      out.write("\">\n");
      out.write("                                    ");
      out.print( rs.getString("status") );
      out.write("\n");
      out.write("                                </span>\n");
      out.write("                            </td>\n");
      out.write("                            <td class=\"py-3 px-4\">\n");
      out.write("                                ");
 if ("Scheduled".equals(rs.getString("status"))) { 
      out.write("\n");
      out.write("                                    <form action=\"markFulfilled\" method=\"POST\" class=\"inline\">\n");
      out.write("                                        <input type=\"hidden\" name=\"appointmentId\" value=\"");
      out.print( rs.getInt("id") );
      out.write("\">\n");
      out.write("                                        <input type=\"hidden\" name=\"requestId\" value=\"");
      out.print( rs.getInt("request_id") );
      out.write("\">\n");
      out.write("                                        <button type=\"submit\" class=\"bg-green-500 text-white px-3 py-1 rounded text-sm hover:bg-green-600\">Mark as Fulfilled</button>\n");
      out.write("                                    </form>\n");
      out.write("                                ");
 } 
      out.write("\n");
      out.write("                            </td>\n");
      out.write("                        </tr>\n");
      out.write("                        ");

                                    }
                                }
                            } catch (SQLException e) {
                                e.printStackTrace();
                            }
                        
      out.write("\n");
      out.write("                    </tbody>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </main>\n");
      out.write("\n");
      out.write("    <!-- MODALS -->\n");
      out.write("    <!-- Request Blood Modal -->\n");
      out.write("    <div id=\"request-blood-modal\" class=\"hidden fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center z-50\">\n");
      out.write("        <div class=\"bg-white p-8 rounded-lg shadow-xl w-full max-w-lg\">\n");
      out.write("            <h2 class=\"text-2xl font-bold mb-4\">Create Blood Request</h2>\n");
      out.write("            <form action=\"createRequest\" method=\"POST\" class=\"space-y-4\">\n");
      out.write("                <input type=\"text\" name=\"patient_name\" placeholder=\"Patient's Full Name\" required class=\"w-full p-2 border rounded\">\n");
      out.write("                <select name=\"required_blood_group\" class=\"w-full p-2 border rounded\">\n");
      out.write("                    <option>A+</option><option>A-</option><option>B+</option><option>B-</option>\n");
      out.write("                    <option>AB+</option><option>AB-</option><option>O+</option><option>O-</option>\n");
      out.write("                </select>\n");
      out.write("                <input type=\"number\" name=\"units_required\" placeholder=\"Units Required\" required class=\"w-full p-2 border rounded\">\n");
      out.write("                <input type=\"text\" name=\"hospital_name\" placeholder=\"Hospital Name\" required class=\"w-full p-2 border rounded\">\n");
      out.write("                <input type=\"text\" name=\"hospital_location\" placeholder=\"Hospital Location (City)\" required class=\"w-full p-2 border rounded\">\n");
      out.write("                <input type=\"text\" name=\"contact_person\" placeholder=\"Contact Person\" required class=\"w-full p-2 border rounded\">\n");
      out.write("                <input type=\"tel\" name=\"contact_phone\" placeholder=\"Contact Phone\" required class=\"w-full p-2 border rounded\">\n");
      out.write("                <div class=\"flex justify-end space-x-4 pt-4\">\n");
      out.write("                    <button type=\"button\" class=\"modal-close-btn px-4 py-2 bg-gray-300 rounded\">Cancel</button>\n");
      out.write("                    <button type=\"submit\" class=\"px-4 py-2 bg-blue-600 text-white rounded\">Submit Request</button>\n");
      out.write("                </div>\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- Give Blood (Available Requests) Modal -->\n");
      out.write("    <div id=\"give-blood-modal\" class=\"hidden fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center z-50\">\n");
      out.write("        <div class=\"bg-white p-8 rounded-lg shadow-xl w-full max-w-3xl\">\n");
      out.write("            <h2 class=\"text-2xl font-bold mb-4\">Available Requests Matching Your Blood Type (");
      out.print( userBloodGroup );
      out.write(")</h2>\n");
      out.write("            <div id=\"requests-container\" class=\"max-h-96 overflow-y-auto\">\n");
      out.write("                <!-- AJAX content will be loaded here -->\n");
      out.write("            </div>\n");
      out.write("            <div class=\"flex justify-end mt-4\">\n");
      out.write("                <button type=\"button\" class=\"modal-close-btn px-4 py-2 bg-gray-300 rounded\">Close</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <!-- *** NEW: Schedule Appointment Modal *** -->\n");
      out.write("    <div id=\"schedule-modal\" class=\"hidden fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center z-50\">\n");
      out.write("        <div class=\"bg-white p-8 rounded-lg shadow-xl w-full max-w-sm\">\n");
      out.write("            <h2 class=\"text-2xl font-bold mb-4\">Schedule Your Donation</h2>\n");
      out.write("            <form id=\"schedule-form\" class=\"space-y-4\">\n");
      out.write("                <input type=\"hidden\" id=\"schedule-request-id\">\n");
      out.write("                <div>\n");
      out.write("                    <label for=\"appointment-date\" class=\"block text-sm font-medium text-gray-700\">Select a Date:</label>\n");
      out.write("                    <input type=\"date\" id=\"appointment-date\" name=\"appointmentDate\" class=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-red-500 focus:border-red-500\" required>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"flex justify-end space-x-4 pt-4\">\n");
      out.write("                    <button type=\"button\" class=\"modal-close-btn px-4 py-2 bg-gray-300 rounded\">Cancel</button>\n");
      out.write("                    <button type=\"submit\" class=\"px-4 py-2 bg-green-600 text-white rounded\">Confirm Appointment</button>\n");
      out.write("                </div>\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    ");
 if (conn != null) try { conn.close(); } catch (SQLException e) { e.printStackTrace(); } 
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("    const requestBloodModal = document.getElementById('request-blood-modal');\n");
      out.write("    const giveBloodModal = document.getElementById('give-blood-modal');\n");
      out.write("    const scheduleModal = document.getElementById('schedule-modal');\n");
      out.write("\n");
      out.write("    const openModal = (modal) => modal.classList.remove('hidden');\n");
      out.write("    const closeModal = (modal) => {\n");
      out.write("        if(modal) modal.classList.add('hidden');\n");
      out.write("    };\n");
      out.write("\n");
      out.write("    // Event listeners for opening modals\n");
      out.write("    document.getElementById('request-blood-btn')?.addEventListener('click', () => openModal(requestBloodModal));\n");
      out.write("    document.getElementById('give-blood-btn')?.addEventListener('click', () => {\n");
      out.write("        fetch('getMatchingRequests')\n");
      out.write("            .then(response => response.json())\n");
      out.write("            .then(data => {\n");
      out.write("                const container = document.getElementById('requests-container');\n");
      out.write("                container.innerHTML = '';\n");
      out.write("                if (data.length === 0) {\n");
      out.write("                    container.innerHTML = '<p>No open requests currently match your blood type. Thank you for checking!</p>';\n");
      out.write("                } else {\n");
      out.write("                    const table = document.createElement('table');\n");
      out.write("                    table.className = 'min-w-full';\n");
      out.write("                    table.innerHTML = `<thead class=\"bg-gray-200\"><tr><th class=\"py-2 px-4 text-left\">Hospital</th><th class=\"py-2 px-4 text-left\">Location</th><th class=\"py-2 px-4 text-left\">Units Needed</th><th class=\"py-2 px-4 text-left\">Action</th></tr></thead>`;\n");
      out.write("                    const tbody = document.createElement('tbody');\n");
      out.write("                    data.forEach(req => {\n");
      out.write("                        const row = document.createElement('tr');\n");
      out.write("                        row.className = 'border-b';\n");
      out.write("                        row.innerHTML = `<td class=\"py-2 px-4\">${req.hospital_name}</td><td class=\"py-2 px-4\">${req.hospital_location}</td><td class=\"py-2 px-4\">${req.units_required}</td><td class=\"py-2 px-4\"><button class=\"schedule-btn bg-blue-500 text-white px-3 py-1 rounded text-sm\" data-request-id=\"${req.id}\">Schedule</button></td>`;\n");
      out.write("                        tbody.appendChild(row);\n");
      out.write("                    });\n");
      out.write("                    table.appendChild(tbody);\n");
      out.write("                    container.appendChild(table);\n");
      out.write("                }\n");
      out.write("                openModal(giveBloodModal);\n");
      out.write("            });\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    // Event listeners for closing modals\n");
      out.write("    document.querySelectorAll('.modal-close-btn').forEach(btn => {\n");
      out.write("        btn.addEventListener('click', () => {\n");
      out.write("            closeModal(requestBloodModal);\n");
      out.write("            closeModal(giveBloodModal);\n");
      out.write("            closeModal(scheduleModal);\n");
      out.write("        });\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    // Handle \"Schedule\" button click inside the \"Give Blood\" modal\n");
      out.write("    document.getElementById('requests-container').addEventListener('click', function(e) {\n");
      out.write("        if (e.target.classList.contains('schedule-btn')) {\n");
      out.write("            const requestId = e.target.dataset.requestId;\n");
      out.write("            document.getElementById('schedule-request-id').value = requestId;\n");
      out.write("            openModal(scheduleModal);\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    // Handle the submission of the new schedule form\n");
      out.write("    document.getElementById('schedule-form')?.addEventListener('submit', function(e) {\n");
      out.write("        e.preventDefault();\n");
      out.write("        const requestId = document.getElementById('schedule-request-id').value;\n");
      out.write("        const appointmentDate = document.getElementById('appointment-date').value;\n");
      out.write("\n");
      out.write("        if (appointmentDate) {\n");
      out.write("            const formData = new FormData();\n");
      out.write("            formData.append('requestId', requestId);\n");
      out.write("            formData.append('appointmentDate', appointmentDate);\n");
      out.write("\n");
      out.write("            fetch('scheduleAppointment', { method: 'POST', body: new URLSearchParams(formData) })\n");
      out.write("                .then(response => {\n");
      out.write("                    if (response.ok) {\n");
      out.write("                        alert('Appointment scheduled successfully! Thank you.');\n");
      out.write("                        closeModal(scheduleModal);\n");
      out.write("                        closeModal(giveBloodModal);\n");
      out.write("                    } else {\n");
      out.write("                        alert('Error: Could not schedule appointment.');\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
